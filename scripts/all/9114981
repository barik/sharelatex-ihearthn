"And that adds up like compound interest into making the code a lot better."Like inverse (or reverse) technical debt. Excellent way of putting why code reviews are important.I would just add that while improving adds up, it shouldn't cover the fact that blocking the team because of camel case issues is not the best use of time.
There are static analysis tools that are free and open source that can do this work.We are spending between 1/5th to 1/10th of our time reviewing code[1]. Most of the times the disciplined have to carry the burden of being 'that guy' that always has something to say.1: http://www.quora.com/How-much-per-day-or-week-do-engineers-s...