There are also other means to assure high quality of code. Testing is just one of many tools. And even 100% coverage does not guarantee your code still isn't crap. Your tests might be crap as well. By testing you can only prove there is a bug but you can't prove there isn't. You can only hope that if you tested the right things, it is likely your code works fine.For example static code analysis is sometimes superior to testing, because it can prove for absence of some wide classes of bugs.And in code reviews we often find subtle bugs that would be extremely hard to write tests for (e.g. concurrency related bugs).You can also decrease bug rates by writing clean, understandable code. Which is often related to hiring a few great programmers instead of a bunch of cheap ones.