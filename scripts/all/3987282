Maybe, I'm still juggling the options in my head. But when I say enterprise I mean enterprise, with all the pejorative connotations thereof. We are not a nimble startup, we are an enormous, established, very conservative company; I'm just the guy who knows all those newfangled languages. This means that, unless someone can convince me otherwise (and if you can, please, please convince me otherwise), Java seems to possess the correct combination of features: mature platform, wide adoption, familiar syntax, readily-available developers, maintainability by those other than the original authors (Java isn't necessarily great at this, but better than many), and a quality that I'll describe only as hard to really fuck things up too badly. If it wasn't for that last requirement, I'd already be trying to sell Python to my boss; as it stands, if I can't find some really awesome static analysis and verification tools for Python, Java is simply the only choice that my conscience allows me to make.(Corollary: what about .NET? Mostly I'm incredibly wary of recommending a language with only one "blessed" platform, and a proprietary one at that. My bosses are wary of this too: as a result of historical decisions we're currently locked into IBM hardware, writing million-line codebases in RPG-LE. If someone can allay my fears of vendor lock-in (at the hands of no less than Microsoft), perhaps I'll consider it.)