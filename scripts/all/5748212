That's dangerous, because you have no way of knowing if you have 100% coverage without doing static analysis, and if you double check everything with static analysis, you might as well only do the static analysis in the first place.  (Static analysis won't always give you an answer, but it won't ever give you a wrong answer.)I am reminded of the folks who optimized .kkrieger, which is a 95 kB first-person shooter.  See "Metaprogramming for Madmen":http://fgiesen.wordpress.com/2012/04/08/metaprogramming-for-...Some highlights: during the test run, the player never pressed the up arrow key in the menu, so that functionality was removed by their tools.  Enemies at the beginning never hit the player, so the code which handles damage was compiled out.  And the system used a certain brand of graphics card, so code necessary for other graphics cards was compiled out.The lesson is: don't let tools change code semantics based only on black-box testing.