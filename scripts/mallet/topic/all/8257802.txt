Don't try to figure out how the code does what does yet. \nFigure out what systems exists inside it:  1.  What kind of modules?\n  2.  Which servers/hardware?\n  3.  Which databases/datastores?\n  4.  What systems talk to what?\n  5.  What test systems exist or existed?\n  6.  Which api/frameworks where used?\n  7.  Who is currently working on them/maintaining it?\n  8.  Is anyone left who used to?\n  9.  Why is a rewrite on the table?\n  10. Is there any way you can work on smaller pieces at a time?\n  11. What are the pain points of the current users (will tell you what area to focus on)?\n  12. Can you document what comes in and out?\n\nIn my experience with such large code bases, there is never one way to do things. i.e. I once worked on a smaller system with 4 ways to talk to the same database. On one with 100 million lines I would expect even more ways to rome ;)If you do want to go down the static analysis path, start with existing tools before trying to build your own. If needed get external help for this.A 100 Million lines of code is not so bizarre. The project I work on is currently about 300,000 lines and a project some 300 times larger is quite imaginable for me.