Hmm, tough question to google but: I was going to blog about but: didn't get around toit. Look at static code analysis and runtime tools (debuggers) there's SO tags for that, python+code-analysis.http://stackoverflow.com/questions/3883484/using-python-code...Python has a very rich toolset, including inspect module,http://stackoverflow.com/questions/1568544/given-a-python-cl...http://code.activestate.com/recipes/213898-drawing-inheritan...Also (this thread)[http://stackoverflow.com/questions/334009/how-to-read-source...] mentions ctags, doxygen, tools like that.  Reading test suites (and running code coverage) is where a lot of people start with new to them codebases.  And python specific emacs and vim plugins, and python-specific IDE's, komodo and pycharm, at the tools they provide for folding code, showing module dependencies/call graphs, stuff like that---------My python's a little rusty, but could generate stacktraces, or use an IDE's stepper/debugger to show where you are at some point in execution of django code-----------Finally [a book](http://www.amazon.com/Code-Reading-Open-Source-Perspective/d...)