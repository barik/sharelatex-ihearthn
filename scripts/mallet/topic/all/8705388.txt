Silverlight, from a development standpoint, was actually pretty great. You could write code in .NET with an infinitely customizable vector-based user interface, defined in a clean and consistent XML-based markup language. It could run in a browser, and even on a Mac.You could develop using all the powerful Visual Studio tooling. It didn't crash all the time like Flash.Using Silverlight and XAML was sort of like what I imagine web programming will be like in about 10 years. Except that you could do it back in 2007.You have a high level language (C#) with reusable components (UserControls) and fantastic debugging, profiling, static analysis, and automatic refactoring.Incidentally, that is where the web is just now heading. Higher level and strongly-typed languages (AtScript, Typescript, Flow, ES6+) with reusable components (Web Components) and better tooling (Firefox and Chrome dev tools)