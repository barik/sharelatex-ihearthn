Personally, I find it painful that the compiler detects this kind of undefined behavior, and silently uses it for optimization, rather then stopping and emitting an error.  In the printf example, the compiler could trivially emit an error saying "NULL check on p after dereference of p", and that would catch a large class of bugs.  (Some static analysis tools check for exactly that.)  Similarly, a loop access statically determined to fall outside the bounds of the array should produce an error.