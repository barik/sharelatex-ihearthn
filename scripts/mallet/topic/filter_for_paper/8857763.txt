While this particular vulnerability in OpenSSL isn't nearly as bad as some of the other recent ones, it drives me crazy that we still have NULL pointer dereferences in something this critical.  The worst part of this library is that the way it is organized makes it difficult to find these problems, or to use tools such as static analyzers to help.  There are some amazing static analysis tools out there for C, but they are rendered useless by some of the hackery used in this library, such as their custom allocators.  I don't mean to sound negative -- the OpenSSL team has done a great job making this library available in the first place -- but given how heavily this library is relied upon, better discipline is needed in this code base.LibreSSL is a step in the right direction, and I commend the OpenBSD team for taking on this alternative.  However, it's only a starting point.  The entire approach of OpenSSL is dated, and it has not done a good job keeping up with our modern understanding of solid security engineering.  The code base needs to be overhauled from the ground up with modern security and software development practices in mind.  If ever there were a library that should be designed using formal proofs in software, it's this one.  Even basic TDD with good code coverage would catch the majority of the bugs that have been discovered in OpenSSL over the past ten years.</rant>