That's really just being lazy on your part though.  I'm not going to sit here and list everything that's come onto the scene since 1990.  Every new language.  Every new methodology.  Every new practice, pattern, and tool.  And not just new things, but also improvements over way things are done.Unless you are going to sit here and suggest that ARC or GC don't help decrease memory errors, or that languages like Python or Java haven't helped move things along.  Heck, even C has been steadily improved over the years.  Compilers are getting smarter.  Tools like valgrind.  Agile methodologies, and formalized code testing.  Static analysis and even improve code reviews.  Heck, even simple things like IDEs and editors.So much has changed, so much as evolved.  Does that mean everything is wrong? No.  But relying on studies that can't be replicated and don't account for common programming practices and environments today is dangerous.