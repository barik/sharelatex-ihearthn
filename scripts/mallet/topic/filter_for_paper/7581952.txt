This is the path that all dynamically typed scripting languages must follow.  Over time, change becomes impossible because the lack of typechecking or static analysis tools means that any change might break something in a subtle and hard-to-diagnose way.  And so the language grows by accretion.  You end up with something like bash or perl, where there are a million ways to do any one thing.  Each way was added at a particular phase of the language's life, and it could never be removed after that.  And so the language becomes difficult to learn and unattractive to newcomers, so another scripting langauge pops up, and the cycle of life begins again.Compare this to a language like golang, where you can just run "go fix" on your code to update it to the latest version.  And you don't have compatibility hell, because when you distribute your application, it's a standalone binary.  Stuff like go is the future.  Get off the dynamic language hamster wheel.