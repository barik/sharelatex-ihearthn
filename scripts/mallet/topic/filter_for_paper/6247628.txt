I'm becoming increasingly convinced that the way forward in software engineering isn't "better" languages like Haskell or Clojure, but with better tooling.I think Carmack's talk shed light on the fact that as humans we have very limited cognitive capacities when it comes to programming and "smarter" languages help us a bit, but we need automated, "smart" tools - like static analysis tools.I think of Visual Studio and Resharper and how much ReSharper finds that I can learn from and how it frees me to concentrate on business logic.Years ago I remember reading an article or an interview with a Sun research scientist where she described programming of the future where languages and tools will be much more lenient of your mistakes and programming will be much more of a two-way conversation with your tooling.That and tools like language work benches are the only ways I see to go forward.  Everybody using Haskell is just a modest (if that) step forward.